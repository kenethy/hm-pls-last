services:
  # PHP Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hartono-app
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./public/build:/var/www/html/public/build
    networks:
      - hartono-network
    depends_on:
      - db
    user: root

  # Nginx Web Server
  webserver:
    image: nginx:alpine
    container_name: hartono-webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "8443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/nginx/ssl/
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    networks:
      - hartono-network
    depends_on:
      - app

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: hartono-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - hartono-network

  # PhpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: hartono-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD}
      UPLOAD_LIMIT: 300M
    ports:
      - "8080:80"
    networks:
      - hartono-network
    depends_on:
      - db

  # WhatsApp API Service (Custom Implementation)
  whatsapp-api:
    build:
      context: ./whatsapp-server
      dockerfile: Dockerfile
    container_name: hartono-whatsapp-api
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - whatsapp_sessions:/app/.wwebjs_auth
      - whatsapp_cache:/app/.wwebjs_cache
    environment:
      - PORT=3000
      - API_KEY=hartonomotor2024
      - WEBHOOK_URL=http://app:80/api/whatsapp/webhook
      - NODE_ENV=production
      - WHATSAPP_MODE=${WHATSAPP_MODE:-mock}
    command: >
      sh -c "
        echo 'Environment WHATSAPP_MODE: '$$WHATSAPP_MODE;
        if [ \"$$WHATSAPP_MODE\" = \"full\" ]; then
          echo 'Starting in FULL mode with real WhatsApp Web.js';
          exec npm run start-full;
        else
          echo 'Starting in MOCK mode for testing';
          exec npm run start-mock;
        fi
      "
    networks:
      - hartono-network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Certbot for SSL
  certbot:
    image: certbot/certbot
    container_name: hartono-certbot
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email admin@hartonomotor.xyz --agree-tos --no-eff-email --force-renewal -d hartonomotor.xyz -d www.hartonomotor.xyz

networks:
  hartono-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  whatsapp_sessions:
    driver: local
  whatsapp_cache:
    driver: local
